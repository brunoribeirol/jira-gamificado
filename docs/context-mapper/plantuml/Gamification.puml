@startuml
skinparam componentStyle uml2

package "'Gamification' Aggregate" <<Rectangle>> {

    ' ==================== ENTITY ====================
    class Reward <<(A,#fffab8) Aggregate Root>> {
        - RewardId id
        - String description
        - int requiredPoints
        - RewardType type
        - MemberId createdBy

        + boolean canBeUnlockedBy(int points)
    }

    ' ==================== VALUE OBJECTS ====================
    class RewardId <<(V,DarkSeaGreen) Value Object>> {
        + int value
    }

    class MemberId <<(V,DarkSeaGreen) Value Object>> {
        + int value
    }

    class RewardType <<(V,DarkSeaGreen) Enum>> {
    }

    enum RewardTypeEnum {
        CUPOM
        FOLGA
        DESTAQUE
    }

    ' ==================== REPOSITORY ====================
    class RewardRepository <<(R,LightBlue) Repository>> {
        + save(reward: Reward)
        + findById(rewardId: RewardId): Reward
        + findAll(): List<Reward>
        + findRewardsAvailableForPoints(points: int): List<Reward>
        + deleteById(rewardId: RewardId)
    }

    ' ==================== SERVICE ====================
    class RewardService <<(S,Wheat) Service>> {
        + createReward(reward: Reward)
        + getRewardById(rewardId: RewardId): Reward
        + getAllRewards(): List<Reward>
        + getRewardsAvailableForPoints(points: int): List<Reward>
        + deleteReward(rewardId: RewardId)
    }

    ' ==================== RELATIONSHIPS ====================
    Reward --> RewardId
    Reward --> MemberId
    Reward --> RewardType

    RewardRepository --> Reward
    RewardService --> Reward
}

legend left
  This bounded context implements the subdomain 'Gamification'.\n
  S = Service, R = Repository, A = Aggregate Root, V = Value Object
end legend
@enduml
