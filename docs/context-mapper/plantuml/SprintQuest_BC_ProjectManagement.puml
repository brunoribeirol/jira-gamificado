@startuml

skinparam componentStyle uml2

package "'ProjectManagement' Aggregate" <<Rectangle>> {
	class Project <<(A,#fffab8) Aggregate Root>> {
		String name
		String null
		List<TaskId> tasks
		List<ChallengeId> challenges
		String null
		kanbanColumns TeamId
		teamId null
		ProjectId id
	}
	class Task <<(A,#fffab8) Aggregate Root>> {
		String title
		String null
		List<MemberId> assignees
		String kanbanColumn
		Integer points
		Date createdAt
		Date completedAt
		TaskId id
	}
	class Challenge <<(A,#fffab8) Aggregate Root>> {
		String title
		String null
		String criteria
		Integer extraPoints
		MemberId createdBy
		ProjectId projectId
		Date deadline
		ChallengeId id
	}
	class ProjectId <<(V,DarkSeaGreen) Value Object>> {
		int id
	}
	class TaskId <<(V,DarkSeaGreen) Value Object>> {
		int id
	}
	class ChallengeId <<(V,DarkSeaGreen) Value Object>> {
		int id
	}
	class TeamId <<(V,DarkSeaGreen) Value Object>> {
		int id
	}
	class MemberId <<(V,DarkSeaGreen) Value Object>> {
		int id
	}
	class ProjectManagementService <<(S,DarkSeaGreen) Service>> {
		void createProject(ProjectId projectId, null null, null null)
		void addTask(ProjectId projectId, TaskId taskId)
		void moveTask(TaskId taskId, null null)
		void completeTask(TaskId taskId)
		void addChallenge(ProjectId projectId, ChallengeId challengeId)
	}
}
Challenge --> ChallengeId : id
Project --> ProjectId : id
Task --> TaskId : id
legend left
  This bounded context implements the subdomain 'ProjectManagement'.
end legend


@enduml
