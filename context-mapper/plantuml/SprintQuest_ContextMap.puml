@startuml SprintQuestDetailedDiagram

skinparam classAttributeIconSize 0
hide empty members
left to right direction

package "Domínio: SprintQuest" {

  package "Subdomínio: ProjectManagement" {
    package "BoundedContext: ProjectManagement" {
      class Project {
        +ProjectId id
        +String name
        +List<StageId> stages
        +List<ChallengeId> challenges
      }
      class Stage {
        +StageId id
        +String name
        +List<TaskId> tasks
      }
      class Task {
        +TaskId id
        +String description
        +Date dueDate
      }
      class Challenge {
        +ChallengeId id
        +String name
        +String description
      }
      class ProjectManagementService {
        +createProject()
        +addStage()
        +addTask()
        +addChallenge()
      }
      Project --> Stage
      Stage --> Task
      Project --> Challenge
      ProjectManagementService --> Project
    }
  }

  package "Subdomínio: Gamification" {
    package "BoundedContext: Gamification" {
      class Score {
        +ScoreId id
        +UserId userId
        +int totalPoints
      }
      class Reward {
        +RewardId id
        +String name
        +String description
        +int requiredPoints
      }
      class Achievement {
        +AchievementId id
        +String name
        +String description
      }
      class Ranking {
        +RankingId id
        +List<ScoreId> topScores
        +Date lastUpdated
      }
      class GamificationService {
        +registerPoints()
        +unlockAchievement()
        +updateRanking()
      }
      Ranking --> Score
      GamificationService --> Score
      GamificationService --> Achievement
      GamificationService --> Ranking
    }
  }

  package "Subdomínio: TeamsAndUsers" {
    package "BoundedContext: TeamsAndUsers" {
      class Team {
        +TeamId id
        +String name
        +List<MemberId> members
      }
      class Member {
        +MemberId id
        +UserId userId
        +Role role
        +List<FeedbackId> feedbacks
      }
      class Feedback {
        +FeedbackId id
        +UserId giverId
        +UserId receiverId
        +String comments
        +Date date
      }
      class TeamsAndUsersService {
        +createTeam()
        +addMember()
        +giveFeedback()
      }
      Team --> Member
      Member --> Feedback
      TeamsAndUsersService --> Team
      TeamsAndUsersService --> Feedback
    }
  }

  package "Subdomínio: ReportingAndPerformance" {
    package "BoundedContext: ReportingAndPerformance" {
      class Report {
        +ReportId id
        +String title
        +String content
        +Date generatedDate
      }
      class PerformanceData {
        +PerformanceDataId id
        +UserId userId
        +int pointsEarned
        +List<FeedbackId> feedbackGiven
      }
      class ReportingAndPerformanceService {
        +generatePerformanceReport()
        +generateTeamReport()
      }
      ReportingAndPerformanceService --> Report
      ReportingAndPerformanceService --> PerformanceData
    }
  }

}

@enduml